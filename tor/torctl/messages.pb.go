// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

package torctl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Endpoint_Type int32

const (
	Endpoint_SOCKS5 Endpoint_Type = 0
)

var Endpoint_Type_name = map[int32]string{
	0: "SOCKS5",
}
var Endpoint_Type_value = map[string]int32{
	"SOCKS5": 0,
}

func (x Endpoint_Type) String() string {
	return proto.EnumName(Endpoint_Type_name, int32(x))
}

type Endpoint struct {
	// Proxy endpoint address
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	// Proxy endpoint type
	Type Endpoint_Type `protobuf:"varint,2,opt,name=type,enum=torctl.Endpoint_Type" json:"type,omitempty"`
	// IP address
	PublicIp string `protobuf:"bytes,3,opt,name=public_ip" json:"public_ip,omitempty"`
	// IP country code
	CountryCode string `protobuf:"bytes,4,opt,name=country_code" json:"country_code,omitempty"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}

type ProxyRequest struct {
	// Request an IP from specified country.
	// ISO Country Code.
	CountryCode string `protobuf:"bytes,1,opt,name=country_code" json:"country_code,omitempty"`
	// Request an identity with specified IP address mask.
	// For example 127.0.*.*
	IpMask string `protobuf:"bytes,2,opt,name=ip_mask" json:"ip_mask,omitempty"`
	// How long should the proxy be locked.
	ExpireSeconds uint32 `protobuf:"varint,3,opt,name=expire_seconds" json:"expire_seconds,omitempty"`
	NewIp         bool   `protobuf:"varint,4,opt,name=new_ip" json:"new_ip,omitempty"`
}

func (m *ProxyRequest) Reset()         { *m = ProxyRequest{} }
func (m *ProxyRequest) String() string { return proto.CompactTextString(m) }
func (*ProxyRequest) ProtoMessage()    {}

type ProxyResponse struct {
	// Id of the proxy
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Proxy information
	Endpoint *Endpoint `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
	// Proxy expiration seconds from now.
	ExpireSeconds uint32 `protobuf:"varint,3,opt,name=expire_seconds" json:"expire_seconds,omitempty"`
}

func (m *ProxyResponse) Reset()         { *m = ProxyResponse{} }
func (m *ProxyResponse) String() string { return proto.CompactTextString(m) }
func (*ProxyResponse) ProtoMessage()    {}

func (m *ProxyResponse) GetEndpoint() *Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type RefreshProxy struct {
	// Id of the proxy to refresh
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Proxy expiration seconds from now.
	ExpireSeconds uint32 `protobuf:"varint,2,opt,name=expire_seconds" json:"expire_seconds,omitempty"`
}

func (m *RefreshProxy) Reset()         { *m = RefreshProxy{} }
func (m *RefreshProxy) String() string { return proto.CompactTextString(m) }
func (*RefreshProxy) ProtoMessage()    {}

type ReleaseRequest struct {
	// Id of the proxy to refresh
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReleaseRequest) Reset()         { *m = ReleaseRequest{} }
func (m *ReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseRequest) ProtoMessage()    {}

type Empty struct {
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("torctl.Endpoint_Type", Endpoint_Type_name, Endpoint_Type_value)
}
